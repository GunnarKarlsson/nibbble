<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:dribbleservice2="services.dribbleservice2.*"
		title="{data.shotType}"
		viewActivate="getList()"
		destructionPolicy="never"
		tabBarVisible="false">
	
	<fx:Declarations>
		<s:HTTPService id="service" url="{_url}"
					   result="serviceResultHandler(event)" request="{_serviceRequestParams}"/>
	</fx:Declarations>

	<s:navigationContent>
		<s:Button icon="@Embed(source='assets/icons/nibbbleLogo.png')" click="navigator.pushView(views.MenuView)"/>
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button label="newer" click="getNewerPage()"/>
		<s:Button label="older" click="getOlderPage()"/>
		<s:Button icon="@Embed(source='assets/icons/refresh48x48.png')" 
				  click="refreshList()"/>
	</s:actionContent>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import helpers.ShotVOArrayCollectionPopulator;
			
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			
			import valueObjects.PlayerVO;
			import valueObjects.ShotTypeVO;
			import valueObjects.ShotVO;
			
			[Bindable]
			private var _shotVOs:ArrayCollection = new ArrayCollection(new Array());
			
			private var _pageNumber:int = 1;
			private var _shotsPerPage:int = 15;
			
			[Bindable]
			private var _serviceRequestParams:Object;
			[Bindable]
			private var _url:String;
			
			private function refreshList():void{
				getList();
			}
			
			private function getList():void{
				if(_shotVOs.length < 1){ 
					callService();
				}
			}
			
			private function callService():void{
				
				trace(data.getViewType());
				
				switch(data.getViewType()){
					case ShotTypeVO.MULTIPLE_PLAYERS_SHOTS_VIEW:
						_url = "http://api.dribbble.com/shots/"+ data.getShotCollectionType();
						break;
					
					case PlayerVO.SINGLE_PLAYERS_SHOTS_VIEW:
						_url = "http://api.dribbble.com/players/"+data.id+"/shots";
						break;
				}
				_serviceRequestParams = new Object();
				_serviceRequestParams.per_page = _shotsPerPage;
				_serviceRequestParams.page = _pageNumber;
				
				service.send();
			}
			
			private function serviceResultHandler(event:ResultEvent):void{
				_shotVOs.removeAll();
				
				var obj:Object = JSON.decode(service.lastResult.toString());
				
				trace("obj.pages"+obj.pages);
				trace("obj.total"+obj.total);
				
				_shotVOs = ShotVOArrayCollectionPopulator.execute(obj);
				
			}
			
			private function listChangeHandler(event:IndexChangeEvent):void
			{
				var item:Object = listDisplay.dataProvider.getItemAt(event.newIndex);
				navigator.pushView(SingleShotView, item);
			}
			
			private function getOlderPage():void{
				if(_shotVOs.length > 0){
					_pageNumber++;
					callService();
				}
			}
			
			private function getNewerPage():void{
				if(_shotVOs.length > 0){
					if(_pageNumber>1)_pageNumber--;
					callService();
				}
			}
		]]>
	</fx:Script>
	
	<s:layout>
		 <s:VerticalLayout horizontalAlign="center" verticalAlign="middle" paddingLeft="10" paddingRight="10"/>
	 </s:layout>
	
	<s:List id="listDisplay" contentBackgroundAlpha="0"
			itemRenderer="itemRenderers.ShotItemRenderer" width="100%" height="100%" dataProvider="{_shotVOs}" change="listChangeHandler(event)">
		<s:layout>
			<s:TileLayout paddingLeft="5" paddingRight="5" paddingTop="10" columnAlign="justifyUsingWidth"/>
		</s:layout>
	</s:List>
	
</s:View>
