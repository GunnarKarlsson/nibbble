<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:itemRenderers="itemRenderers.*"
		title="Following"
		tabBarVisible="false"
		viewActivate="init()" 
		destructionPolicy="never">
	
	<fx:Declarations>
		<s:HTTPService id="service" url="{_url}"
					   result="serviceResultHandler(event)"/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			
			//$ curl http://api.dribbble.com/players/simplebits/following
			
			import com.adobe.serialization.json.JSON;
			
			import helpers.PlayerVOArrayCollectionPopulator;
			
			import mx.collections.ArrayCollection;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;	
			
			[Bindable]
			private var _url:String;
			[Bindable]
			private var _playerVOs:ArrayCollection = new ArrayCollection();
			
			private function init():void{
				_url = "http://api.dribbble.com/players/"+data.id+"/following";
				service.send();
			}
			
			private function serviceResultHandler(event:ResultEvent):void{
				_playerVOs.removeAll();
				var obj:Object = JSON.decode(service.lastResult.toString());
				_playerVOs = PlayerVOArrayCollectionPopulator.execute(obj);				
			}
			
			private function listChangeHandler(event:IndexChangeEvent):void{
				var item:Object = listDisplay.dataProvider.getItemAt(event.newIndex);
				navigator.pushView(PlayerView, item);			
			}	
			
		]]>
	</fx:Script>
	
	<s:navigationContent>
		<s:Button icon="@Embed(source='assets/icons/nibbbleLogo.png')" />
	</s:navigationContent>
	
	
	
	<!--<s:Label text="{data.username}"/>-->
	
	<s:layout>
		<s:VerticalLayout horizontalAlign="center" verticalAlign="middle" paddingLeft="10" paddingRight="10"/>
	</s:layout>
	
	<s:List id="listDisplay" contentBackgroundAlpha="0"
			itemRenderer="itemRenderers.PlayerTileItemRenderer" width="100%" height="100%" dataProvider="{_playerVOs}" change="listChangeHandler(event)">
		<s:layout>
			<s:TileLayout paddingLeft="5" paddingRight="5" paddingTop="20" paddingBottom="20" columnAlign="justifyUsingGap"/>
		</s:layout>
	</s:List>
	
</s:View>