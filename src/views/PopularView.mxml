<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		xmlns:dribbleservice2="services.dribbleservice2.*"
		title="popular"
		viewActivate="getEveryoneList()"
		destructionPolicy="never">
	
	<fx:Declarations>
		<s:CallResponder id="DribbleService2Result" result="parseResult()"/>
		<dribbleservice2:DribbleService2 id="dribbleService2"/>
	</fx:Declarations>
	
	<s:navigationContent>
		<s:Button icon="@Embed(source='assets/icons/nibbbleLogo.png')" />
	</s:navigationContent>
	
	<s:actionContent>
		<s:Button icon="@Embed(source='assets/icons/refresh48x48.png')" 
				  click="refreshList()"/>
	</s:actionContent>
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import mx.collections.ArrayCollection;
			import mx.events.IndexChangedEvent;
			
			import spark.events.IndexChangeEvent;
			
			import valueObjects.ShotVO;
			
			[Bindable]
			private var _shotVOs:ArrayCollection = new ArrayCollection(new Array());
			
			private function refreshList():void{
				getEveryoneList();
			}
			
			private function getEveryoneList():void{
				DribbleService2Result.token = dribbleService2.DribbleService2(25);
			}
			
			private function parseResult():void{
				_shotVOs.removeAll();
				
				var obj:Object = JSON.decode(DribbleService2Result.lastResult);
				var shots:Array = obj.shots as Array;
				
				for(var i:int = 0; i < obj.shots.length;i++){	
					var vo:ShotVO = new ShotVO(obj.shots[i].image_teaser_url,obj.shots[i].image_url);
					vo.shotId = obj.shots[i].id;
					vo.title = obj.shots[i].title;
					vo.likesCount = obj.shots[i].likes_count;
					vo.viewCount = obj.shots[i].views_count;
					vo.commentsCount = obj.shots[i].comments_count;
					
					var player:Object = obj.shots[i].player as Object;
					vo.userName = player.username as String;
					vo.playerId = player.id;
				
					_shotVOs.addItem(vo);
				}
			}
			
			private function listChangeHandler(event:IndexChangeEvent):void
			{
				var item:Object = listDisplay.dataProvider.getItemAt(event.newIndex);
				navigator.pushView(ShotView, item);
			}
		]]>
	</fx:Script>
	<s:List id="listDisplay" width="100%" height="100%" 
			dataProvider="{_shotVOs}"
			change="listChangeHandler(event)">
		<s:itemRenderer>
			<fx:Component>
				<s:IconItemRenderer fontSize="25"
									labelField="title"
									decorator="{data.teaserImage}"/>
			</fx:Component>
		</s:itemRenderer>
	</s:List>
	
</s:View>
